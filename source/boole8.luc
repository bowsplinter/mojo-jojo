/*
Boole8 module is a 8-bit Boolean Unit
   
*/

module boole8 (
    input a[8],
    input b[8],
    input alufn[4], // ALUFN[3:0]
    output out[8]
  ) {

  always {
    case(alufn) {
      4b0000: // ZERO
        out = 8x{0};
      4b0001: // NOR
        out = ~(a|b);
      4b0010: // A > B, A=1, B=0
        out = a&~b;
      4b0011: // NOT B
        out = ~b;
      4b0100: // B > A, A=0, B=1
        out = ~a&b;
      4b0101: // NOT A
        out = ~a;  
      4b0110: // XOR
        out = a^b;
      4b0111: // NAND
        out = ~(a&b);
      4b1000: // AND
        out = a&b;
      4b1001: // XNOR
        out = ~(a^b);  
      4b1010: // A
        out = a;
      4b1011: // A <= B, not (A=0, B=1)
        out = a|~b;
      4b1100: // B
        out = b;
      4b1101: // B <= A, not (A=1, B=0)
        out = ~a|b;
      4b1110: // OR
        out = a|b;
      4b1111: // ONE
        out = 8x{1};
      default:
        out = 8x{0};
    }
  }
}