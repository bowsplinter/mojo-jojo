module alu8 (
    input alufn[6],  // ALUFN [5:0]
    input a[8],
    input b[8],
    output out[8]
  ) {
  
  adder8 add;
  boole8 bool;
  compare8 cmp;
  shift8 shift;
  multiplier8 mul;
  
  always {
    
    // adder8
    add.a = a;
    add.b = b;
    add.alufn = alufn[0];
    
    // multiplier8
    mul.a = a;
    mul.b = b;
    mul.alufn = alufn[0];
    
    // boole8
    bool.a = a;
    bool.b = b;
    bool.alufn = alufn[3:0];
    
    // compare8
    cmp.z = add.z;
    cmp.v = add.v;
    cmp.n = add.n;
    cmp.alufn = alufn[1:0];
    
    // shift8
    shift.a = a;
    shift.b = b[2:0];
    shift.alufn = alufn[1:0];
    
    case(alufn[5:4]) {
      2b00: // adder
        if (alufn[1]) {
          out = mul.out;
        }
        else {
          out = add.out;
        }
      2b01: // boole
        out = bool.out;
      2b10: // shifter
        out = shift.out;
      2b11: // compare
        out = cmp.out;
      default:
        out = 8x{0};
    }
  }
}
